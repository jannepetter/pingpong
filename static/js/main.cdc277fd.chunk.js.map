{"version":3,"sources":["utils/AI.js","utils/Equipment.js","utils/Functions.js","services/scoreService.js","components/Board.js","components/OptionPanel.js","components/ScorePanel.js","App.js","serviceWorker.js","index.js"],"names":["calcspotAI","baseWidth","playingfield","width","height","ball","x","y","size","dx","dy","playerPaddle","speed","computerPaddle","calculatedAI","resetAiCalculations","centerPaddle","paddle","Math","abs","AILvl1","weak","handicap","usespeed","min","ballXspeed","ballYspeed","smoothspeed","balldirectionX","ballPaddleRelation","reflectLeftoverFromWall","start","leftover","goingUp","dist","landingSpotY","startx","starty","speedx","speedy","time","totW","getXlength","ylength","numberOfHeightCrossings","floor","reverseStartY","ballStartingSpeedX","ballStartingSpeedY","startingPositions","drawPaddles","ctx","beginPath","fillStyle","fillRect","drawball","arc","PI","fill","clearCanvas","canvas","clearRect","bcryptjs","require","url","process","getScores","a","config","params","name","axios","get","scores","data","postScores","gamescores","hash","id","headers","post","response","console","log","Board","props","baseScore","rafID","useRef","pauseButtonInfo","run","document","getElementById","useState","playerPoints","setPlayerPoints","computerPoints","setComputerPoints","difficulty","setDifficulty","setUpdate","setStart","setRun","setScores","getContext","aiLvl","AILvl2","pausedView","useCallback","points","font","fillText","drawInstructions","score","resetAndPause","scoresorter","b","parseInt","calculatePoints","base","length","minscore","playerScore","playerName","window","prompt","playserNameAndScore","playername","toString","newscores","push","forEach","element","_id","body","gamename","sort","slice","responseScores","endGame","whoScored","delayUpdate","setTimeout","drawEndGame","drawEndText","update","paddleHitsEdges","ballDy","ballHitsEdges","centerBounce","round","random","accBounce","third","xRange","positiveSpeed","ballXplusSpeed","paddlePlusWidth","yRange","ballHitsPaddle","current","requestAnimationFrame","useEffect","cancelAnimationFrame","show","addEventListener","e","key","touchKeyDownHandle","direction","cancelable","preventDefault","touchKeyUpHandle","goUpTouchKey","goDownTouchKey","passive","className","onClick","OptionPanel","disabled","onChange","target","value","type","defaultChecked","htmlFor","hidden","setShow","ScorePanel","map","p","App","then","sc","Boolean","location","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.cdc277fd.chunk.js","sourcesContent":["import { ball, computerPaddle, playerPaddle, playingfield } from './Equipment'\r\n\r\nlet calculatedAI = false\r\nlet calcspotAI\r\nlet player1calculatedAI = false\r\nlet calcspotPlayer1AI\r\n\r\nexport const resetAiCalculations = () => {\r\n    calculatedAI = false\r\n    player1calculatedAI = false\r\n}\r\n\r\nconst centerPaddle = (paddle, speed) => {\r\n    if (Math.abs(paddle.y + (paddle.height / 2) - playingfield.height / 2) < 6) {\r\n        paddle.dy = 0\r\n    } else if (paddle.y + (paddle.height / 2) > playingfield.height / 2) {\r\n        paddle.dy = speed * -1\r\n    } else if (paddle.y + (paddle.height / 2) < playingfield.height / 2) {\r\n        paddle.dy = speed\r\n    }\r\n}\r\n\r\nconst smoothspeed = (ball, paddle) => {\r\n    const height = Math.abs(ball.y - (paddle.y + paddle.height / 2))\r\n    const usespeed = Math.min(Math.abs(ball.dy) + 1, paddle.speed)\r\n    const ballXspeed = Math.abs(ball.dx)\r\n    const ballYspeed = Math.abs(ball.dy)\r\n    if (ballXspeed > 8 || ballYspeed > 8) {\r\n        return paddle.speed\r\n    }\r\n    if (height < paddle.height / 2) {\r\n        return usespeed\r\n    }\r\n    return paddle.speed\r\n}\r\nexport const AILvl1 = (weak) => {\r\n    let handicap = 0\r\n    if (weak) {\r\n        handicap = computerPaddle.speed / 3\r\n    }\r\n    const speed = smoothspeed(ball, computerPaddle) - handicap\r\n    const balldirectionX = ball.dx > 0 ? 'incoming' : 'outgoing'\r\n    const ballPaddleRelation = ball.y > (computerPaddle.y + computerPaddle.height / 2) ? 'down' : 'up'\r\n    const closeEnuf = ball.y > (computerPaddle.y + computerPaddle.height / 2) - computerPaddle.speed &&\r\n        ball.y < (computerPaddle.y + computerPaddle.height / 2) + computerPaddle.speed\r\n    const info = closeEnuf ? balldirectionX + 'towards' : balldirectionX + ballPaddleRelation\r\n    switch (info) {\r\n        case 'incomingdown':\r\n            computerPaddle.dy = speed\r\n            break;\r\n        case 'incomingup':\r\n            computerPaddle.dy = speed * -1\r\n            break;\r\n        case 'incomingtowards':\r\n            computerPaddle.dy = 0\r\n            break;\r\n        default:\r\n            centerPaddle(computerPaddle, speed)\r\n            break;\r\n    }\r\n\r\n}\r\n\r\nconst reflectLeftoverFromWall = (start, leftover, goingUp) => {\r\n    if (goingUp) {\r\n        return Math.abs(start - (leftover))\r\n    }\r\n    if (!goingUp) {\r\n        const dist = start + (leftover)\r\n        if (dist > playingfield.height) {\r\n            return playingfield.height - (dist - playingfield.height)\r\n        }\r\n        return dist\r\n    }\r\n}\r\nconst getXlength = (startx) => {\r\n    const totW = playingfield.width\r\n    if (startx > totW / 2) {\r\n        return totW - (totW - startx) - (playerPaddle.x + playerPaddle.width)\r\n    } else {\r\n        return totW - startx - (totW - computerPaddle.x)\r\n    }\r\n}\r\n\r\nconst landingSpotY = (startx, starty, speedx, speedy) => {\r\n    const xlength = getXlength(startx)\r\n    const time = xlength / speedx\r\n    const ylength = Math.abs(time * speedy)\r\n    const numberOfHeightCrossings = Math.floor(ylength / (playingfield.height))\r\n    const leftover = (ylength % (playingfield.height))\r\n    if (ylength === 0) {\r\n        return ball.y\r\n    }\r\n    if (numberOfHeightCrossings % 2 === 0 && speedy < 0) {\r\n        return reflectLeftoverFromWall(starty, leftover, true)\r\n    }\r\n    if (numberOfHeightCrossings % 2 === 0 && speedy > 0) {\r\n        return reflectLeftoverFromWall(starty, leftover, false)\r\n    }\r\n    if (numberOfHeightCrossings % 2 === 1 && speedy < 0) {\r\n        const reverseStartY = playingfield.height - starty\r\n        return reflectLeftoverFromWall(reverseStartY, leftover, false)\r\n    }\r\n    if (numberOfHeightCrossings % 2 === 1 && speedy > 0) {\r\n        const reverseStartY = playingfield.height - starty\r\n        return reflectLeftoverFromWall(reverseStartY, leftover, true)\r\n    }\r\n}\r\n\r\nexport const AILvl2 = () => {\r\n    const speed = computerPaddle.speed\r\n    const balldirectionX = ball.dx > 0 ? 'incoming' : 'outgoing'\r\n    if (balldirectionX === 'outgoing' && calculatedAI === true) {\r\n        calculatedAI = false\r\n    }\r\n    if (balldirectionX === 'incoming' && calculatedAI === false) {\r\n        calcspotAI = landingSpotY(ball.x, ball.y, ball.dx, ball.dy)\r\n        calculatedAI = true\r\n    }\r\n\r\n    let ballPaddleRelation = calcspotAI > (computerPaddle.y + computerPaddle.height / 2) ? 'down' : 'up'\r\n    if (calcspotAI < (computerPaddle.y + computerPaddle.height / 2) + computerPaddle.speed &&\r\n        calcspotAI > (computerPaddle.y + computerPaddle.height / 2) - computerPaddle.speed) {\r\n        ballPaddleRelation = 'towards'\r\n    }\r\n    const info = balldirectionX + ballPaddleRelation\r\n\r\n    switch (info) {\r\n        case 'incomingdown':\r\n            computerPaddle.dy = speed\r\n            break;\r\n        case 'incomingup':\r\n            computerPaddle.dy = speed * -1\r\n            break;\r\n        case 'incomingtowards':\r\n            computerPaddle.dy = 0\r\n            break;\r\n        default:\r\n            centerPaddle(computerPaddle, speed)\r\n            break;\r\n    }\r\n}\r\nexport const Player1AI = () => {\r\n    const speed = playerPaddle.speed\r\n    const balldirectionX = ball.dx > 0 ? 'outgoing' : 'incoming'\r\n    if (balldirectionX === 'outgoing' && player1calculatedAI === true) {\r\n        player1calculatedAI = false\r\n    }\r\n    if (balldirectionX === 'incoming' && player1calculatedAI === false) {\r\n        calcspotPlayer1AI = landingSpotY(ball.x, ball.y, ball.dx, ball.dy)\r\n        player1calculatedAI = true\r\n    }\r\n\r\n    let ballPaddleRelation = calcspotPlayer1AI > (playerPaddle.y + playerPaddle.height / 2) ? 'down' : 'up'\r\n    if (calcspotPlayer1AI < (playerPaddle.y + playerPaddle.height / 2) + 5 &&\r\n        calcspotPlayer1AI > (playerPaddle.y + playerPaddle.height / 2) - 5) {\r\n        ballPaddleRelation = 'towards'\r\n    }\r\n    const info = balldirectionX + ballPaddleRelation\r\n\r\n    switch (info) {\r\n        case 'incomingdown':\r\n            playerPaddle.dy = speed\r\n            break;\r\n        case 'incomingup':\r\n            playerPaddle.dy = speed * -1\r\n            break;\r\n        case 'incomingtowards':\r\n            playerPaddle.dy = 0\r\n            break;\r\n        default:\r\n            centerPaddle(playerPaddle, speed)\r\n            break;\r\n    }\r\n\r\n}","let baseWidth = 1600\r\n\r\nexport const changeBaseWidth = (width) => {\r\n    playingfield.width = width\r\n    playingfield.height = width * (2 / 3)\r\n\r\n    ball.x = playingfield.width / 2\r\n    ball.y = playingfield.height / 2\r\n    ball.size = playingfield.height / 40\r\n    ball.dx = playingfield.width / 100\r\n    ball.dy = playingfield.height / 100\r\n\r\n    playerPaddle.x = playingfield.width / 30\r\n    playerPaddle.y = playingfield.height / 2.5\r\n    playerPaddle.width = playingfield.width / 40\r\n    playerPaddle.height = playingfield.height / 5.5\r\n    playerPaddle.speed = width / 100\r\n\r\n    computerPaddle.x = playingfield.width - playingfield.width / 20\r\n    computerPaddle.y = playingfield.height / 2.5\r\n    computerPaddle.width = playingfield.width / 40\r\n    computerPaddle.height = playingfield.height / 5.5\r\n    computerPaddle.speed = width / 100\r\n\r\n}\r\n\r\nexport const playingfield = {\r\n    width: baseWidth,\r\n    height: baseWidth * (2 / 3)\r\n}\r\n\r\nexport const ball = {\r\n    x: playingfield.width / 2,\r\n    y: playingfield.height / 2,\r\n    size: playingfield.height / 40,\r\n    dx: playingfield.width / 100,\r\n    dy: playingfield.height / 100\r\n}\r\nexport const playerPaddle = {\r\n    x: playingfield.width / 30,\r\n    y: playingfield.height / 2.5,\r\n    width: playingfield.width / 40,\r\n    height: playingfield.height / 5.5,\r\n    speed: baseWidth / 100,\r\n    dy: 0\r\n}\r\nexport const computerPaddle = {\r\n    x: playingfield.width - playingfield.width / 20,\r\n    y: playingfield.height / 2.5,\r\n    width: playingfield.width / 40,\r\n    height: playingfield.height / 5.5,\r\n    speed: baseWidth / 100,\r\n    dy: 0\r\n}","import { ball, playerPaddle, computerPaddle, playingfield } from '../utils/Equipment'\r\nconst ballStartingSpeedX = playingfield.width / 100\r\nconst ballStartingSpeedY = playingfield.height / 100\r\n\r\nexport const startingPositions = () => {\r\n    ball.x = playingfield.width / 2\r\n    ball.y = playingfield.height / 2\r\n    ball.dx = ballStartingSpeedX\r\n    ball.dy = ballStartingSpeedY\r\n    playerPaddle.y = playingfield.height / 2.5\r\n    computerPaddle.y = playingfield.height / 2.5\r\n}\r\nexport const drawInstructions = (ctx, run, start, points) => {\r\n    ctx.font = \"30px Arial\";\r\n    ctx.fillStyle = \"white\";\r\n    if (start && !run) {\r\n        ctx.fillText(\"Paused\", playingfield.width / 2.2, playingfield.height / 4.4);\r\n    } else if (!start && !run) {\r\n        ctx.fillText(\"Press start to begin game\", playingfield.width / 2.6, playingfield.height / 4.4);\r\n        ctx.fillText(\"Move paddle up, arrowUp key\", playingfield.width / 2.6, playingfield.height / 3.8);\r\n        ctx.fillText(\"Move paddle down, arrowDown key\", playingfield.width / 2.6, playingfield.height / 3.3);\r\n        ctx.fillText(\"Mobile touchkeys, appear in landscapeview\", playingfield.width / 2.6, playingfield.height / 2.95);\r\n        ctx.fillText(`Who gets ${points} points first wins`, playingfield.width / 2.6, playingfield.height / 2.65);\r\n    } else if (run && start) {\r\n        ctx.fillText(\"Get ready!\", playingfield.width / 2.2, playingfield.height / 4.4);\r\n    }\r\n}\r\nexport const drawEndText = (ctx, playerPoints, computerPoints) => {\r\n    ctx.font = \"30px Arial\";\r\n    ctx.fillStyle = \"white\";\r\n    if (playerPoints > computerPoints) {\r\n        ctx.fillText(\"You won! Play again?\", playingfield.width / 2.4, playingfield.height / 4.4);\r\n    } else if (computerPoints > playerPoints) {\r\n        ctx.fillText(\"You lose! Try again?\", playingfield.width / 2.4, playingfield.height / 4.4);\r\n    }\r\n}\r\n\r\nexport const drawPaddles = (ctx) => {\r\n    ctx.beginPath()\r\n    ctx.fillStyle = 'white'\r\n    ctx.fillRect(playerPaddle.x, playerPaddle.y, playerPaddle.width, playerPaddle.height)\r\n    ctx.fillRect(computerPaddle.x, computerPaddle.y, computerPaddle.width, computerPaddle.height)\r\n}\r\n\r\nexport const drawball = (ctx) => {\r\n    ctx.beginPath()\r\n    ctx.arc(ball.x, ball.y, ball.size, 0, Math.PI * 2)\r\n    ctx.fillStyle = 'red'\r\n    ctx.fill()\r\n}\r\nexport const ballHitsEdges = (canvas) => {\r\n    const ballDy = Math.abs(ball.dy)\r\n    if (ball.y > canvas.height - ballDy) {\r\n        ball.y = canvas.height\r\n        ball.dy *= -1\r\n    }\r\n    if (ball.y < ballDy) {\r\n        ball.y = 0\r\n        ball.dy *= -1\r\n    }\r\n}\r\nexport const paddleHitsEdges = (canvas) => {\r\n    if (playerPaddle.y < 0) {\r\n        playerPaddle.y = 0\r\n    }\r\n    if (playerPaddle.y + playerPaddle.height > canvas.height) {\r\n        playerPaddle.y = canvas.height - playerPaddle.height\r\n    }\r\n    if (computerPaddle.y < 0) {\r\n        computerPaddle.y = 0\r\n    }\r\n    if (computerPaddle.y + computerPaddle.height > canvas.height) {\r\n        computerPaddle.y = canvas.height - computerPaddle.height\r\n    }\r\n}\r\nexport const clearCanvas = (ctx, canvas) => {\r\n    ctx.clearRect(0, 0, canvas.width, canvas.height)\r\n    ctx.fillStyle = 'black'\r\n    ctx.fillRect(0, 0, canvas.width, canvas.height)\r\n}\r\n\r\nexport const ballHitsPaddle = () => {\r\n    const edgeBounce = 2\r\n    const centerBounce = Math.round(Math.random() * (computerPaddle.height / 20))\r\n    const speedIncrease = 1.02\r\n    const maxSpeed = 30\r\n\r\n    const accBounce = (paddle, ball) => {\r\n        const info = ball.dx > 0 ? 'right' : 'left'\r\n        switch (info) {\r\n            case 'right':\r\n                ball.x = paddle.x - ball.size\r\n                ball.dx *= -speedIncrease\r\n                break;\r\n            case 'left':\r\n                ball.x = paddle.x + paddle.width + ball.size\r\n                ball.dx *= -speedIncrease\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n\r\n        const third = paddle.height / 3\r\n        if (ball.y >= paddle.y - ball.size && ball.y <= paddle.y + third) {\r\n            ball.dy <= -maxSpeed ? ball.dy = -maxSpeed : ball.dy -= edgeBounce\r\n        }\r\n        if (ball.y >= paddle.y + third && ball.y <= paddle.y + third * 2) {\r\n            centerBounce % 2 === 0 ? ball.dy += centerBounce : ball.dy -= centerBounce\r\n        }\r\n        if (ball.y >= paddle.y + third * 2 && ball.y <= paddle.y + ball.size + third * 3) {\r\n            ball.dy >= maxSpeed ? ball.dy = maxSpeed : ball.dy += edgeBounce\r\n        }\r\n\r\n\r\n\r\n    }\r\n\r\n    const xRange = (paddle, ball) => {\r\n        const positiveSpeed = ball.dx > 0 ? true : false\r\n        const ballXplusSpeed = ball.x + ball.dx\r\n        const paddlePlusWidth = paddle.x + paddle.width\r\n        if (positiveSpeed && ballXplusSpeed >= paddle.x && ballXplusSpeed <= paddlePlusWidth) {\r\n            return true\r\n        }\r\n        if (!positiveSpeed && ballXplusSpeed - ball.size <= paddlePlusWidth && ballXplusSpeed >= paddle.x) {\r\n            return true\r\n        }\r\n        return false\r\n    }\r\n\r\n    const yRange = (paddle, ball) => {\r\n        if (ball.y >= paddle.y - ball.size && ball.y <= paddle.y + paddle.height + ball.size) {\r\n            return true\r\n        }\r\n        return false\r\n    }\r\n\r\n    if (xRange(playerPaddle, ball) &&\r\n        yRange(playerPaddle, ball)) {\r\n        accBounce(playerPaddle, ball)\r\n    }\r\n    if (xRange(computerPaddle, ball) &&\r\n        yRange(computerPaddle, ball)) {\r\n        accBounce(computerPaddle, ball)\r\n    }\r\n}","import axios from 'axios'\r\nconst bcryptjs = require('bcryptjs')\r\n\r\nconst url = process.env.REACT_APP_SCOREURL\r\n\r\nconst getScores = async () => {\r\n    const config = { params: { name: 'pong' } }\r\n    const scores = await axios.get(url, config)\r\n    return scores.data\r\n}\r\nconst postScores = async (gamescores) => {\r\n    const id = await bcryptjs.hash(process.env.REACT_APP_ID, 10)\r\n    const config = { headers: { id: id } }\r\n    const response = await axios.post(url, gamescores, config)\r\n    console.log('postaamassa', response)\r\n    return response.data\r\n}\r\n\r\nexport { getScores, postScores }","import React, { useCallback, useEffect, useRef, useState } from 'react';\r\nimport { ball, playerPaddle, computerPaddle, playingfield } from '../utils/Equipment'\r\nimport { AILvl1, AILvl2, /* Player1AI, */ resetAiCalculations } from '../utils/AI'\r\nimport {\r\n    drawPaddles, drawball, ballHitsEdges, paddleHitsEdges,\r\n    clearCanvas, ballHitsPaddle, startingPositions, drawInstructions, drawEndText\r\n} from '../utils/Functions'\r\nimport '../css/Board.css'\r\nimport { postScores } from '../services/scoreService'\r\n\r\nconst Board = (props) => {\r\n\r\n\r\n    const rafID = useRef()\r\n    const pauseButtonInfo = props.run ? 'pause' : 'continue'\r\n    const canvas = document.getElementById('kanvaasi')\r\n    const [playerPoints, setPlayerPoints] = useState(0)\r\n    const [computerPoints, setComputerPoints] = useState(0)\r\n    const difficulty = props.difficulty\r\n    const setDifficulty = props.setDifficulty\r\n    const setUpdate = props.setUpdate\r\n    const setStart = props.setStart\r\n    const setRun = props.setRun\r\n    const setScores = props.setScores\r\n    const gamePointLimit = 10\r\n    let baseScore\r\n    if (difficulty === 'easy') {\r\n        baseScore = 100\r\n    } else if (difficulty === 'normal') {\r\n        baseScore = 200\r\n    } else {\r\n        baseScore = 600\r\n    }\r\n\r\n    const ctx = canvas.getContext('2d')\r\n    canvas.width = playingfield.width\r\n    canvas.height = playingfield.height\r\n    ctx.fillStyle = 'black'\r\n    ctx.fillRect(0, 0, canvas.width, canvas.height)\r\n\r\n    const aiLvl = (difficulty) => {\r\n        switch (difficulty) {\r\n            case 'easy':\r\n                return AILvl1(true)\r\n            case 'normal':\r\n                return AILvl1(false)\r\n            case 'hard':\r\n                return AILvl2()\r\n            default:\r\n                return AILvl1(true)\r\n        }\r\n    }\r\n\r\n    const pausedView = useCallback(() => {\r\n        clearCanvas(ctx, canvas)\r\n        drawPaddles(ctx)\r\n        drawball(ctx)\r\n        drawInstructions(ctx, props.run, props.start, gamePointLimit)\r\n    }, [ctx, canvas, props.run, props.start])\r\n\r\n\r\n\r\n\r\n    const score = useCallback((ball) => {\r\n        const resetAndPause = () => {\r\n            startingPositions()\r\n            resetAiCalculations()\r\n            pausedView()\r\n        }\r\n        if (ball.x < -200) {\r\n            setComputerPoints(computerPoints + 1)\r\n            resetAndPause()\r\n            return 'computer'\r\n        }\r\n        if (ball.x > playingfield.width + 200) {\r\n            setPlayerPoints(playerPoints + 1)\r\n            resetAndPause()\r\n            return 'player'\r\n        }\r\n        return 'noscore'\r\n    }, [computerPoints, playerPoints, pausedView])\r\n\r\n    const scoresorter = (a, b) => {\r\n        return parseInt(b.score) - parseInt(a.score)\r\n    }\r\n\r\n    const calculatePoints = useCallback(async (scores, base) => {\r\n        if (scores && playerPoints > computerPoints) {\r\n            console.log(scores, scores.length, 'tarkistus')\r\n            const minscore = parseInt(scores[scores.length - 1]?.score)\r\n            const playerScore = (1 + playerPoints - computerPoints) * base\r\n            if (scores.length < 10 || (playerScore > minscore)) {\r\n                const playerName = window.prompt('New highscore')\r\n                const playserNameAndScore = { playername: playerName, score: playerScore.toString() }\r\n                const newscores = []\r\n                newscores.push(playserNameAndScore)\r\n                scores.forEach(element => {\r\n                    delete element._id\r\n                    newscores.push(element)\r\n                });\r\n                const body = {\r\n                    gamename: 'pong',\r\n                    scores: newscores.sort((a, b) => scoresorter(a, b)).slice(0, 10)\r\n                }\r\n                const response = await postScores(body)\r\n                const responseScores = response.scores ? response.scores : []\r\n                setScores(responseScores)\r\n            }\r\n        }\r\n    }, [computerPoints, playerPoints, setScores])\r\n    const endGame = useCallback((whoScored) => {\r\n        const delayUpdate = () => {\r\n            setTimeout(() => {\r\n                setUpdate(true)\r\n            }, 1500);\r\n        }\r\n        const drawEndGame = () => {\r\n            setStart(false)\r\n            setRun(false)\r\n            setDifficulty('easy')\r\n            clearCanvas(ctx, canvas)\r\n            drawPaddles(ctx)\r\n            drawball(ctx)\r\n            drawEndText(ctx, playerPoints, computerPoints)\r\n        }\r\n        switch (whoScored) {\r\n            case 'computer':\r\n                if (computerPoints + 1 >= gamePointLimit) {\r\n                    drawEndGame()\r\n                    calculatePoints(props.scores, baseScore)\r\n                    break;\r\n                }\r\n                delayUpdate()\r\n                break;\r\n            case 'player':\r\n                if (playerPoints + 1 >= gamePointLimit) {\r\n                    drawEndGame()\r\n                    calculatePoints(props.scores, baseScore)\r\n                    break;\r\n                }\r\n                delayUpdate()\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }, [ctx, canvas, playerPoints, computerPoints, setUpdate, setStart, setRun, setDifficulty, baseScore, calculatePoints, props.scores])\r\n\r\n\r\n    const update = useCallback(() => {\r\n        clearCanvas(ctx, canvas)\r\n        drawPaddles(ctx)\r\n        aiLvl(difficulty)\r\n        /* Player1AI() */\r\n        playerPaddle.y += playerPaddle.dy\r\n        computerPaddle.y += computerPaddle.dy\r\n        drawball(ctx)\r\n        ball.x += ball.dx\r\n        ball.y += ball.dy\r\n        paddleHitsEdges(canvas)\r\n        ballHitsEdges(canvas)\r\n        ballHitsPaddle()\r\n        const whoScored = score(ball)\r\n        if (whoScored !== 'noscore') {\r\n            setUpdate(false)\r\n            endGame(whoScored)\r\n        } else {\r\n            rafID.current = requestAnimationFrame(update)\r\n        }\r\n    }, [canvas, ctx, difficulty, setUpdate, score, endGame])\r\n\r\n    useEffect(() => {\r\n        cancelAnimationFrame(rafID.current)\r\n        if (props.run && props.start && props.update) {\r\n            update()\r\n        }\r\n    }, [computerPoints, playerPoints, props.run, props.start, props.update, update, props.difficulty])\r\n\r\n    if (props.show) {\r\n        return null\r\n    }\r\n\r\n    const keyDown = (e) => {\r\n        if (e.key === 'ArrowUp') {\r\n            playerPaddle.dy = playerPaddle.speed * -1\r\n        }\r\n        if (e.key === 'ArrowDown') {\r\n            playerPaddle.dy = playerPaddle.speed\r\n        }\r\n    }\r\n    const keyUp = (e) => {\r\n        if (e.key === 'ArrowUp') {\r\n            playerPaddle.dy = 0\r\n        }\r\n        if (e.key === 'ArrowDown') {\r\n            playerPaddle.dy = 0\r\n        }\r\n    }\r\n\r\n    document.addEventListener('keydown', keyDown)\r\n    document.addEventListener('keyup', keyUp)\r\n\r\n    const pauseContinue = () => {\r\n        if (props.run === false) {\r\n            setRun(true)\r\n            return\r\n        } else if (props.run === true) {\r\n            setRun(false)\r\n        }\r\n    }\r\n    const begin = () => {\r\n        if (props.start === false) {\r\n            update()\r\n            setPlayerPoints(0)\r\n            setComputerPoints(0)\r\n            setUpdate(true)\r\n            setRun(true)\r\n            setStart(true)\r\n        }\r\n    }\r\n\r\n    const restartGame = () => {\r\n        cancelAnimationFrame(rafID.current)\r\n        startingPositions()\r\n        resetAiCalculations()\r\n        props.setDifficulty('easy')\r\n        pausedView()\r\n        setStart(false)\r\n        setRun(false)\r\n        setComputerPoints(0)\r\n        setPlayerPoints(0)\r\n    }\r\n    const touchKeyDownHandle = (e, direction) => {\r\n        if (e.cancelable) {\r\n            e.preventDefault(); /* scroll prevent while pressing the button */\r\n        }\r\n        playerPaddle.dy = playerPaddle.speed * direction\r\n    }\r\n    const touchKeyUpHandle = (e) => {\r\n        if (e.cancelable) {\r\n            e.preventDefault(); /* scroll prevent while pressing the button */\r\n        }\r\n        playerPaddle.dy = 0\r\n\r\n    }\r\n\r\n    const goUpTouchKey = document.getElementById('ylosnappi')\r\n    const goDownTouchKey = document.getElementById('alasnappi')\r\n\r\n\r\n    goUpTouchKey.addEventListener('touchstart', (e) => touchKeyDownHandle(e, -1), { passive: false })\r\n    goUpTouchKey.addEventListener('touchend', (e) => touchKeyUpHandle(e))\r\n    goDownTouchKey.addEventListener('touchstart', (e) => touchKeyDownHandle(e, 1), { passive: false })\r\n    goDownTouchKey.addEventListener('touchend', (e) => touchKeyUpHandle(e))\r\n\r\n\r\n\r\n\r\n    pausedView()\r\n    return (\r\n        <div className='infobar'>\r\n            <span className='infoitem'>player {playerPoints}</span> <span className='infoitem'>computer   {computerPoints}</span>\r\n            {props.start ? <button className='infoitem basicButton' onClick={pauseContinue}>{pauseButtonInfo}</button> : null}\r\n            {!props.start ? <button className='infoitem basicButton' onClick={begin}>start</button> :\r\n                <button className='infoitem basicButton' onClick={restartGame}>restart</button>}\r\n        </div>)\r\n}\r\n\r\n\r\nexport default Board","import React from 'react';\r\nimport '../css/OptionPanel.css'\r\n\r\n\r\nconst OptionPanel = (props) => {\r\n\r\n    // if (props.start) {\r\n    //     return (<div></div>)\r\n    // }\r\n    const handleScores = () => {\r\n        props.setShow(!props.show)\r\n    }\r\n    return (\r\n        <div className='optionpanelcontainer'>\r\n            <div >\r\n                difficulty:\r\n                <input disabled={props.start} onChange={e => props.setDifficulty(e.target.value)}\r\n                    name=\"jee\" type=\"radio\" id=\"radio1\" defaultChecked value=\"easy\"></input>\r\n                <label htmlFor=\"radio1\" >easy</label>\r\n\r\n                <input disabled={props.start} onChange={e => props.setDifficulty(e.target.value)}\r\n                    name=\"jee\" type=\"radio\" id=\"radio2\" value=\"normal\"></input>\r\n                <label htmlFor=\"radio2\" >normal</label>\r\n\r\n                <input disabled={props.start} onChange={e => props.setDifficulty(e.target.value)}\r\n                    name=\"jee\" type=\"radio\" id=\"radio3\" value=\"hard\"></input>\r\n                <label htmlFor=\"radio3\" >real pro</label>\r\n                <button hidden={props.start} className=\"scoreButton\" onClick={() => handleScores()}>scores</button>\r\n\r\n            </div>\r\n        </div>)\r\n}\r\n\r\nexport default OptionPanel","import React from 'react';\r\nimport '../css/scorepanel.css'\r\n\r\nconst ScorePanel = ({ scores, show }) => {\r\n\r\n    if (show !== true || !scores) {\r\n        return null\r\n    }\r\n\r\n    return (\r\n        <div className=\"scorePanelContainer\">\r\n            <h3>Highscores</h3>\r\n            {scores.map(p => <div className=\"scoreInfoDiv\" key={p._id}><div className=\"scoreInfoName\">{p.playername}</div><div className=\"scoreInfoScore\">{\": \"}{p.score}</div></div>)}\r\n\r\n        </div>)\r\n}\r\n\r\nexport default ScorePanel","import React, { useEffect, useState } from 'react';\r\nimport './css/App.css';\r\nimport Board from './components/Board';\r\nimport OptionPanel from './components/OptionPanel';\r\nimport { getScores } from './services/scoreService';\r\nimport ScorePanel from './components/ScorePanel';\r\n\r\nfunction App() {\r\n  const [run, setRun] = useState(false)\r\n  const [start, setStart] = useState(false)\r\n  const [difficulty, setDifficulty] = useState('easy')\r\n  const [update, setUpdate] = useState(false)\r\n  const [scores, setScores] = useState([])\r\n  const [show, setShow] = useState(false)\r\n\r\n  const scoresorter = (a, b) => {\r\n    return parseInt(b.score) - parseInt(a.score)\r\n  }\r\n\r\n  useEffect(() => {\r\n    console.log('loading')\r\n    getScores().then(sc => setScores(sc[0]?.scores?.sort((a, b) => scoresorter(a, b))))\r\n  }, [])\r\n  if (!scores) {\r\n    setScores([])\r\n  }\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <OptionPanel show={show} setShow={setShow} setDifficulty={setDifficulty} start={start}></OptionPanel>\r\n      <ScorePanel show={show} scores={scores}></ScorePanel>\r\n      <Board setScores={setScores} scores={scores} show={show} run={run} setRun={setRun} start={start} setStart={setStart}\r\n        difficulty={difficulty} setDifficulty={setDifficulty}\r\n        update={update} setUpdate={setUpdate}></Board>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './css/index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}